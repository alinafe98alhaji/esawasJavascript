/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dataopenessandflow/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Falinafe%2FDocuments%2Fcode%2Fapp%2Fdataopenessandflow%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Falinafe%2FDocuments%2Fcode%2Fapp%2Fdataopenessandflow%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*******************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/dataopenessandflow/page.tsx */ \"(app-pages-browser)/./app/dataopenessandflow/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFsaW5hZmUlMkZEb2N1bWVudHMlMkZjb2RlJTJGYXBwJTJGZGF0YW9wZW5lc3NhbmRmbG93JTJGcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSw0TEFBaUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz8zMDk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYWxpbmFmZS9Eb2N1bWVudHMvY29kZS9hcHAvZGF0YW9wZW5lc3NhbmRmbG93L3BhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Falinafe%2FDocuments%2Fcode%2Fapp%2Fdataopenessandflow%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/dataopenessandflow/page.tsx":
/*!*****************************************!*\
  !*** ./app/dataopenessandflow/page.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n//'use client';\n/*\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n----(MAIN GO TO)i made this to distinguish between pieces of code as i keep adding functionality--\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n*/ // import { useState } from 'react';\n// const SurveyPage = () => {//main component starts here\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   // Track yes/no responses for the areas\n//   const [responses, setResponses] = useState({\n//     UWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   // Track active areas to be displayed in the next question\n//   const [activeAreas, setActiveAreas] = useState(Object.keys(responses));\n//   // Track inactive areas to be displayed in the appropriate question\n//   const [inactiveAreas, setInactiveAreas] = useState(Object.keys(responses));\n//   // Store a history of active areas at each question index\n//   const [activeAreaHistory, setActiveAreaHistory] = useState([Object.keys(responses)]);\n//   const questions = [\n//         { id: '1',     text: 'Question 1: Select Yes/No for each area' },\n//         { id: '1a',    text: 'Question 1a: Yet another question for Yes areas' },\n//         { id: '1ai',   text: 'Question 1a(i): Another question for Yes areas' },\n//         { id: '1aii',  text: 'Question 1a(ii): the logic part with five radios' },\n//         { id: '1aiii', text: 'Question 1a(iii): No logic but with five radios' },\n//         { id: '1aiv',  text: 'Question 1a(iv): No logic but with five radios' },\n//         // Add other questions here\n//       ];\n//   // Handle Yes/No response changes\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//   };\n//   // Get areas that responded \"Yes\" (true) in the current question\n//   const getYesAreas = () => {\n//     return Object.keys(responses).filter((area) => responses[area as keyof typeof responses] === true);\n//   };\n//   const getNoAreas = () => {\n//     return Object.keys(responses).filter((area) => responses[area as keyof typeof responses] === false);\n//   };\n//   // Go to the next question and update the active areas\n//   const handleNext = () => {\n//     if (questions[currentQuestionIndex].id === '1') {\n//       // For Question 1, carry over all areas to 1a\n//       const allAreas = Object.keys(responses);\n//       setActiveAreaHistory((prevHistory) => [...prevHistory, allAreas]);\n//       setActiveAreas(allAreas); // Carry over all areas\n//      }\n//      if (questions[currentQuestionIndex].id === '1.a') {\n//       // For Question 1.a store yes areas and use in 1.a.(ii)\n//       // const yesArea1a = getYesAreas();\n//       // const noArea1a = getNoAreas();\n//       // setActiveAreaHistory((prevHistory) => [...prevHistory, Object.keys(responses)]);\n//       // setActiveAreas(Object.keys(responses));\n//       // setActiveAreas(yesArea1a); // Update active areas to only include areas that answered \"Yes\"\n//       // setInactiveAreas(noArea1a);//Update inactive areas to inly include areas that asnwered \"No\"\n//       // Get Yes and No areas from the responses\n//       const yesAreas1a = getYesAreas();\n//       // Store responses in history and update active/inactive areas\n//       setActiveAreaHistory((prevHistory) => [...prevHistory, Object.keys(responses)]);\n//       setActiveAreas(yesAreas1a); // Areas that selected \"Yes\" for use in 1.a.(i)\n//      }\n//      if (questions[currentQuestionIndex].id === '1.a.(i)') {\n//       // For Question 1.a.(i) get yes areas\n//       setActiveAreaHistory((prevHistory) => [...prevHistory, activeAreas]);\n//      }\n//      if (questions[currentQuestionIndex].id === '1.a.(ii)') {\n//       // For Question 1, carry over all areas to 1a\n//        // Carry over all areas\n//      }\n//      if (questions[currentQuestionIndex].id === '1/a.(iii)') {\n//       // For Question 1, carry over all areas to 1a\n//       // Carry over all areas\n//      }\n//      if (questions[currentQuestionIndex].id === '1.a.(iv)') {\n//       // For Question 1, carry over all areas to 1a\n//       // \n//       inactiveAreas\n//      }\n//       //else {\n//     //   // For other questions, filter areas based on \"Yes\" responses\n//     //   const yesAreas = getYesAreas();\n//     //   setActiveAreaHistory((prevHistory) => [...prevHistory, yesAreas]);\n//     //   \n//     // }\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);//leave this alone\n//   };\n//   // Go to the previous question and restore active areas from history\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//       setActiveAreas(activeAreaHistory[currentQuestionIndex - 1]); // Restore active areas from history\n//     }\n//   };\n//   // Render the current question based on the index\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     switch (currentQuestion.id) {\n//       case '1':\n//         // Render the first question with all areas\n//         return (\n//           <div>\n//             <h3>{currentQuestion.text}</h3>\n//             {Object.keys(responses).map((area) => (\n//               <div key={area}>\n//                 <label>{area}</label>\n//                 <input\n//                   type=\"radio\"\n//                   name={`yesno-${area}`}\n//                   value=\"yes\"\n//                   checked={responses[area as keyof typeof responses] === true}\n//                   onChange={() => handleYesNoChange(area, true)}\n//                   required\n//                 />\n//                 Yes\n//                 <input\n//                   type=\"radio\"\n//                   name={`yesno-${area}`}\n//                   value=\"no\"\n//                   checked={responses[area as keyof typeof responses] === false}\n//                   onChange={() => handleYesNoChange(area, false)}\n//                   required\n//                 />\n//                 No\n//               </div>\n//             ))}\n//           </div>\n//         );\n//       case '1a':\n//         // Render question 1a with all areas (regardless of Yes/No)\n//         return (\n//           <div>\n//             <h3>{currentQuestion.text}</h3>\n//             {getYesAreas().map((area) => (\n//               <div key={area}>\n//                 <label>{area}</label>\n//                 <input\n//                   type=\"radio\"\n//                   name={`yesno-${area}-1ai`}\n//                   value=\"yes\"\n//                   onChange={() => handleYesNoChange(area, true)}\n//                   checked={responses[area as keyof typeof responses] === true}\n//                 />\n//                 Yes\n//                 <input\n//                   type=\"radio\"\n//                   name={`yesno-${area}-1ai`}\n//                   value=\"no\"\n//                   onChange={() => handleYesNoChange(area, false)}\n//                   checked={responses[area as keyof typeof responses] === false}\n//                 />\n//                 No\n//               </div>\n//             ))}\n//           </div>\n//         );\n//       case '1ai':\n//         // Render question 1a(i) with only areas that answered \"Yes\" in the previous question\n//         return (\n//           <div>\n//             <h3>{currentQuestion.text}</h3>\n//             {activeAreas.length > 0 ? (\n//               activeAreas.map((area) => (\n//                 <div key={area}>\n//                   <label>{area}</label>\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1ai`}\n//                     value=\"yes\"\n//                     checked={responses[area as keyof typeof responses] === true}\n//                     onChange={() => handleYesNoChange(area, true)}\n//                   />\n//                   yes\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"no\"\n//                     checked={responses[area as keyof typeof responses] === false}\n//                     onChange={() => handleYesNoChange(area, false)}\n//                   />\n//                   no\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No areas to display for this question.</p>\n//             )}\n//           </div>\n//         );\n// //--------------------------------------------------------------------------------------------------\n// //--------------------------------------------------------------------------------------------------use different object to store state\n// //--------------------------------------------------------------------------------------------------\n//         case '1aii':\n//         // Render question 1a(ii) with only areas that answered \"Yes\" in the previous question\n//         return (\n//           <div>\n//             <h3>{currentQuestion.text}</h3>\n//             {activeAreas.length > 0 ? (\n//               activeAreas.map((area) => (\n//                 <div key={area}>\n//                   <label>{area}</label>\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"yes\"\n//                     checked={responses[area as keyof typeof responses] === true}\n//                     onChange={() => handleYesNoChange(area, true)}\n//                   />\n//                   yes\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"no\"\n//                     checked={responses[area as keyof typeof responses] === false}\n//                     onChange={() => handleYesNoChange(area, false)}\n//                   />\n//                   no\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No areas to display for this question.</p>\n//             )}\n//           </div>\n//         );\n//         case '1aiii':\n//         // Render question 1a(iii) with only areas that answered \"Yes\" in the previous question\n//         return (\n//           <div>\n//             <h3>{currentQuestion.text}</h3>\n//             {activeAreas.length > 0 ? (\n//               activeAreas.map((area) => (\n//                 <div key={area}>\n//                   <label>{area}</label>\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"yes\"\n//                     checked={responses[area as keyof typeof responses] === true}\n//                     onChange={() => handleYesNoChange(area, true)}\n//                   />\n//                   yes\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"no\"\n//                     checked={responses[area as keyof typeof responses] === false}\n//                     onChange={() => handleYesNoChange(area, false)}\n//                   />\n//                   no\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No areas to display for this question.</p>\n//             )}\n//           </div>\n//         );\n//         case '1aiv':\n//         // Render question 1a(iv) with only areas that answered \"Yes\" in the previous question\n//         return (\n//           <div>\n//             <h3>{currentQuestion.text}</h3>\n//             {activeAreas.length > 0 ? (\n//               activeAreas.map((area) => (\n//                 <div key={area}>\n//                   <label>{area}</label>\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"yes\"\n//                     checked={responses[area as keyof typeof responses] === true}\n//                     onChange={() => handleYesNoChange(area, true)}\n//                   />\n//                   yes\n//                   <input\n//                     type=\"radio\"\n//                     name={`yesno-${area}-1aii`}\n//                     value=\"no\"\n//                     checked={responses[area as keyof typeof responses] === false}\n//                     onChange={() => handleYesNoChange(area, false)}\n//                   />\n//                   no\n//                 </div>\n//               ))\n//             ) : (\n//               <p>No areas to display for this question.</p>\n//             )}\n//           </div>\n//         );\n//       // Add cases for other questions as needed\n//       default:\n//         return <p>No more questions.</p>;\n//     }\n//   };\n//   return (\n//     <div>\n//       {renderQuestion()}\n//       <div>\n//         {currentQuestionIndex > 0 && <button onClick={handleBack}>Back</button>}\n//         {currentQuestionIndex < questions.length - 1 && <button onClick={handleNext}>Next</button>}\n//         {currentQuestionIndex === questions.length - 1 && <button>Submit</button>}\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n/*\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n----i made this to distinguish between pieces of code as i keep adding functionality--\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n*/ // 'use client';\n// import { useState } from 'react';\n// const SurveyPage = () => {\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const [responses, setResponses] = useState({\n//     UWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   // Track active areas throughout the survey\n//   const [activeAreas, setActiveAreas] = useState(Object.keys(responses));\n//   const [noAreasFrom1ai, setNoAreasFrom1ai] = useState<string[]>([]); // Track \"No\" areas from 1.a.(i)\n//   const questions = [\n//     { id: '1', text: 'Question 1: Select Yes/No for each area' },\n//     { id: '1a', text: 'Question 1a: Select Yes/No for each area again' },\n//     { id: '1ai', text: 'Question 1a(i): Yes/No again for filtered areas from 1a' },\n//     { id: '1aii', text: 'Question 1a(ii): Multi-option for areas from 1a(i) with Yes' },\n//     { id: '1aiii', text: 'Question 1a(iii): Multi-option question' },\n//     { id: '1aiv', text: 'Question 1a(iv): Multi-option for areas from 1a(i) with No' }, // Filtered \"No\" areas from 1.a.(i)\n//   ];\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//   };\n//   const handleMultiOptionChange = (area: string, value: number) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//   };\n//   const getYesAreas = () => Object.keys(responses).filter((area) => responses[area as keyof typeof responses] === true);\n//   const getNoAreas = () => Object.keys(responses).filter((area) => responses[area as keyof typeof responses] === false);\n//   const handleNext = () => {\n//     let nextActiveAreas = activeAreas;\n//     if (questions[currentQuestionIndex].id === '1') {\n//       // For question 1, all areas move forward\n//       nextActiveAreas = Object.keys(responses);\n//     } else if (questions[currentQuestionIndex].id === '1a') {\n//       // Filter areas for 1.a(i) based on Yes/No in 1a\n//       nextActiveAreas = getYesAreas();\n//     } else if (questions[currentQuestionIndex].id === '1ai') {\n//       // At 1.a.(i), areas with Yes move to 1.a.(ii) and No move to 1.a.(iv)\n//       const yesAreas = getYesAreas();\n//       const noAreas = getNoAreas();\n//       setNoAreasFrom1ai(noAreas); // Track the no areas for 1.a.(iv)\n//       nextActiveAreas = yesAreas;\n//     } else if (questions[currentQuestionIndex].id === '1aii') {\n//       // Filter out areas selecting option 5 in 1.a.(ii)\n//       nextActiveAreas = activeAreas.filter((area) => responses[area as keyof typeof responses] !== 5);\n//     } else if (questions[currentQuestionIndex].id === '1aiv') {\n//       // For question 1a(iv), render only the No areas from 1.a.(i)\n//       nextActiveAreas = noAreasFrom1ai; // Use the saved no areas from 1.a.(i)\n//     }\n//     setActiveAreas(nextActiveAreas);\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n//   };\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//     }\n//   };\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     const renderYesNoRadios = (areas: string[]) => (\n//       areas.map((area) => (\n//         <div key={area}>\n//           <label>{area}</label>\n//           <input\n//             type=\"radio\"\n//             name={`yesno-${area}`}\n//             value=\"yes\"\n//             checked={responses[area as keyof typeof responses] === true}\n//             onChange={() => handleYesNoChange(area, true)}\n//           />\n//           Yes\n//           <input\n//             type=\"radio\"\n//             name={`yesno-${area}`}\n//             value=\"no\"\n//             checked={responses[area as keyof typeof responses] === false}\n//             onChange={() => handleYesNoChange(area, false)}\n//           />\n//           No\n//         </div>\n//       ))\n//     );\n//     const renderFiveOptionRadios = (areas: string[]) => (\n//       areas.map((area) => (\n//         <div key={area}>\n//           <label>{area}</label>\n//           <input type=\"radio\" name={`multi-${area}`} value=\"1\" onChange={() => handleMultiOptionChange(area, 1)} /> Option 1\n//           <input type=\"radio\" name={`multi-${area}`} value=\"2\" onChange={() => handleMultiOptionChange(area, 2)} /> Option 2\n//           <input type=\"radio\" name={`multi-${area}`} value=\"3\" onChange={() => handleMultiOptionChange(area, 3)} /> Option 3\n//           <input type=\"radio\" name={`multi-${area}`} value=\"4\" onChange={() => handleMultiOptionChange(area, 4)} /> Option 4\n//           <input type=\"radio\" name={`multi-${area}`} value=\"5\" onChange={() => handleMultiOptionChange(area, 5)} /> Option 5\n//         </div>\n//       ))\n//     );\n//     switch (currentQuestion.id) {\n//       case '1':\n//       case '1a':\n//         return <div><h3>{currentQuestion.text}</h3>{renderYesNoRadios(Object.keys(responses))}</div>;\n//       case '1ai':\n//         return <div><h3>{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1aii':\n//       case '1aiii':\n//         return <div><h3>{currentQuestion.text}</h3>{renderFiveOptionRadios(activeAreas)}</div>;\n//       case '1aiv':\n//         return <div><h3>{currentQuestion.text}</h3>{renderFiveOptionRadios(noAreasFrom1ai)}</div>;\n//       default:\n//         return <p>No more questions.</p>;\n//     }\n//   };\n//   return (\n//     <div>\n//       {renderQuestion()}\n//       <div>\n//         {currentQuestionIndex > 0 && <button onClick={handleBack}>Back</button>}\n//         {currentQuestionIndex < questions.length - 1 && <button onClick={handleNext}>Next</button>}\n//         {currentQuestionIndex === questions.length - 1 && <button>Submit</button>}\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n/*\n--------------------------------------------------------------------------------------\n----------------------)MAIN CODE_-----------------------------------------------------\n----i made this to distinguish between pieces of code as i keep adding functionality--\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n*/ // 'use client';\n// import { useState } from 'react';\n// const SurveyPage = () => {\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const [error, setError] = useState<string | null>(null);\n//   const [responses, setResponses] = useState({\n//     UWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   const [yesAreas1ai, setYesAreas1ai] = useState<string[]>([]); // Yes areas after 1.a(i)\n//   const [noAreas1ai, setNoAreas1ai] = useState<string[]>([]);   // No areas after 1.a(i)\n//   const [activeAreas, setActiveAreas] = useState<string[]>(Object.keys(responses)); // Active areas for the flow\n//   const [yesAreas1aii, setYesAreas1aii] = useState<string[]>([]); // Yes areas for 1a(iii)\n//   const [finalAreas1aiii, setFinalAreas1aiii] = useState<string[]>([]); // Areas proceeding to 1a(iii)\n//   const questions = [\n//     { id: '1', text: 'Question 1: Select Yes/No for each area' },\n//     { id: '1a', text: 'Question 1a: Select Yes/No for each area again' },\n//     { id: '1ai', text: 'Question 1a(i): Yes/No again for filtered areas from 1a' },\n//     { id: '1aii', text: 'Question 1a(ii): Multi-option for areas from 1a(i) with Yes' },\n//     { id: '1aiii', text: 'Question 1a(iii): Multi-option for all areas' },\n//     { id: '1aiv', text: 'Question 1a(iv): Multi-option for areas from 1a(i) with No' }\n//   ];\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null); // Clear error when user makes a selection\n//   };\n//   const handleFiveOptionChange = (area: string, value: string) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null); // Clear error when user makes a selection\n//   };\n//   // Get areas that selected Yes or No\n//   const getYesAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === true);\n//   const getNoAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === false);\n//   // Get areas that selected options 1-4 (for 1.a(ii) and 1.a(iii))\n//   const getOptions1to4 = () => yesAreas1ai.filter((area) => {\n//     const value = responses[area as keyof typeof responses];\n//     return value !== null && value !== '5';\n//   });\n//   // Validation: Ensure all areas have a selection\n//   const validateAllFieldsSelected = (areas: string[]) => {\n//     for (const area of areas) {\n//       if (responses[area as keyof typeof responses] === null) {\n//         return false;\n//       }\n//     }\n//     return true;\n//   };\n//   const handleNext = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     if (currentQuestion.id === '1a') {\n//       // Validate all fields for 1.a\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return; // Stop here if validation fails\n//       }\n//       const yesAreas = getYesAreas();\n//       setActiveAreas(yesAreas); // Remove areas that selected \"No\" from active areas\n//     } else if (currentQuestion.id === '1ai') {\n//       // Validate Yes/No fields for filtered areas in 1.a(i)\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return; // Stop here if validation fails\n//       }\n//       setYesAreas1ai(getYesAreas()); // Set Yes areas for 1a(ii)\n//       setNoAreas1ai(getNoAreas());   // Set No areas for 1a(iv)\n//     } else if (currentQuestion.id === '1aii') {\n//       // Validate multi-option fields for 1.a(ii)\n//       if (!validateAllFieldsSelected(yesAreas1ai)) {\n//         setError('Please select an option for all areas.');\n//         return; // Stop here if validation fails\n//       }\n//       const areasFor1aiii = getOptions1to4(); // Only areas with option 1-4 proceed\n//       setFinalAreas1aiii(areasFor1aiii); // Set final areas for 1.a(iii)\n//     }\n//     // Move to the next question\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n//     setError(null); // Clear error when moving to next question\n//   };\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//     }\n//   };\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     const renderYesNoRadios = (areas: string[]) => (\n//       areas.map((area) => (\n//         <div key={area}>\n//           <label>{area}</label>\n//           <input\n//             type=\"radio\"\n//             name={`yesno-${area}`}\n//             value=\"yes\"\n//             checked={responses[area as keyof typeof responses] === true}\n//             onChange={() => handleYesNoChange(area, true)}\n//           />\n//           Yes\n//           <input\n//             type=\"radio\"\n//             name={`yesno-${area}`}\n//             value=\"no\"\n//             checked={responses[area as keyof typeof responses] === false}\n//             onChange={() => handleYesNoChange(area, false)}\n//           />\n//           No\n//         </div>\n//       ))\n//     );\n//     const renderFiveOptionRadios = (areas: string[]) => (\n//       areas.map((area) => (\n//         <div key={area}>\n//           <label>{area}</label>\n//           <input type=\"radio\" name={`multi-${area}`} value=\"1\" onChange={() => handleFiveOptionChange(area, \"1\")} /> Option 1\n//           <input type=\"radio\" name={`multi-${area}`} value=\"2\" onChange={() => handleFiveOptionChange(area, \"2\")} /> Option 2\n//           <input type=\"radio\" name={`multi-${area}`} value=\"3\" onChange={() => handleFiveOptionChange(area, \"3\")} /> Option 3\n//           <input type=\"radio\" name={`multi-${area}`} value=\"4\" onChange={() => handleFiveOptionChange(area, \"4\")} /> Option 4\n//           <input type=\"radio\" name={`multi-${area}`} value=\"5\" onChange={() => handleFiveOptionChange(area, \"5\")} /> Option 5\n//         </div>\n//       ))\n//     );\n//     switch (currentQuestion.id) {\n//       case '1':\n//         return <div><h3>{currentQuestion.text}</h3>{renderYesNoRadios(Object.keys(responses))}</div>;\n//       case '1a':\n//         return <div><h3>{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1ai':\n//         return <div><h3>{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1aii':\n//         return <div><h3>{currentQuestion.text}</h3>{renderFiveOptionRadios(yesAreas1ai)}</div>;\n//       case '1aiii':\n//         return <div><h3>{currentQuestion.text}</h3>{renderFiveOptionRadios(finalAreas1aiii)}</div>; // Filtered areas\n//       case '1aiv':\n//         return <div><h3>{currentQuestion.text}</h3>{renderFiveOptionRadios(noAreas1ai)}</div>; // Correctly render No areas from 1.a(i)\n//       default:\n//         return <p>No more questions.</p>;\n//     }\n//   };\n//   return (\n//     <div>\n//       {renderQuestion()}\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <div>\n//         {currentQuestionIndex > 0 && <button onClick={handleBack}>Back</button>}\n//         {currentQuestionIndex < questions.length - 1 && <button onClick={handleNext}>Next</button>}\n//         {currentQuestionIndex === questions.length - 1 && <button>Submit</button>}\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n/*\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n----i made this to distinguish between pieces of code as i keep adding functionality--\n--------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------\n*/ /* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst SurveyPage = ()=>{\n    _s();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [responses, setResponses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        UWSS: null,\n        USSM: null,\n        RWSSM: null,\n        RSSM: null,\n        FM: null,\n        RF: null,\n        UOM: null\n    });\n    const [yesAreas1ai, setYesAreas1ai] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [noAreas1ai, setNoAreas1ai] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeAreas, setActiveAreas] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Object.keys(responses));\n    const [yesAreas1aii, setYesAreas1aii] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [finalAreas1aiii, setFinalAreas1aiii] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const questions = [\n        {\n            id: \"1\",\n            text: \"Question 1: Select Yes/No for each area\"\n        },\n        {\n            id: \"1a\",\n            text: \"Question 1a: Select Yes/No for each area again\"\n        },\n        {\n            id: \"1ai\",\n            text: \"Question 1a(i): Yes/No again for filtered areas from 1a\"\n        },\n        {\n            id: \"1aii\",\n            text: \"Question 1a(ii): Multi-option for areas from 1a(i) with Yes\"\n        },\n        {\n            id: \"1aiii\",\n            text: \"Question 1a(iii): Multi-option for all areas\"\n        },\n        {\n            id: \"1aiv\",\n            text: \"Question 1a(iv): Multi-option for areas from 1a(i) with No\"\n        }\n    ];\n    const handleYesNoChange = (area, value)=>{\n        setResponses((prevResponses)=>({\n                ...prevResponses,\n                [area]: value\n            }));\n        setError(null);\n    };\n    const handleFiveOptionChange = (area, value)=>{\n        setResponses((prevResponses)=>({\n                ...prevResponses,\n                [area]: value\n            }));\n        setError(null);\n    };\n    const getYesAreas = ()=>activeAreas.filter((area)=>responses[area] === true);\n    const getNoAreas = ()=>activeAreas.filter((area)=>responses[area] === false);\n    const getOptions1to4 = ()=>yesAreas1ai.filter((area)=>{\n            const value = responses[area];\n            return value !== null && value !== \"5\";\n        });\n    const validateAllFieldsSelected = (areas)=>{\n        for (const area of areas){\n            if (responses[area] === null) {\n                return false;\n            }\n        }\n        return true;\n    };\n    const handleNext = ()=>{\n        const currentQuestion = questions[currentQuestionIndex];\n        if (currentQuestion.id === \"1a\") {\n            if (!validateAllFieldsSelected(activeAreas)) {\n                setError(\"Please select Yes or No for all areas.\");\n                return;\n            }\n            const yesAreas = getYesAreas();\n            setActiveAreas(yesAreas);\n        } else if (currentQuestion.id === \"1ai\") {\n            if (!validateAllFieldsSelected(activeAreas)) {\n                setError(\"Please select Yes or No for all areas.\");\n                return;\n            }\n            setYesAreas1ai(getYesAreas());\n            setNoAreas1ai(getNoAreas());\n        } else if (currentQuestion.id === \"1aii\") {\n            if (!validateAllFieldsSelected(yesAreas1ai)) {\n                setError(\"Please select an option for all areas.\");\n                return;\n            }\n            const areasFor1aiii = getOptions1to4();\n            setFinalAreas1aiii(areasFor1aiii);\n        }\n        setCurrentQuestionIndex((prevIndex)=>prevIndex + 1);\n        setError(null);\n    };\n    const handleBack = ()=>{\n        if (currentQuestionIndex > 0) {\n            setCurrentQuestionIndex((prevIndex)=>prevIndex - 1);\n        }\n    };\n    const renderQuestion = ()=>{\n        const currentQuestion = questions[currentQuestionIndex];\n        const renderYesNoRadios = (areas)=>areas.map((area)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center mb-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            className: \"text-black-800 mr-2\",\n                            children: area\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 823,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"radio\",\n                            name: \"yesno-\".concat(area),\n                            value: \"yes\",\n                            checked: responses[area] === true,\n                            onChange: ()=>handleYesNoChange(area, true),\n                            className: \"mr-1\"\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 824,\n                            columnNumber: 11\n                        }, undefined),\n                        \"Yes\",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"radio\",\n                            name: \"yesno-\".concat(area),\n                            value: \"no\",\n                            checked: responses[area] === false,\n                            onChange: ()=>handleYesNoChange(area, false),\n                            className: \"ml-2 mr-1\"\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 833,\n                            columnNumber: 11\n                        }, undefined),\n                        \"No\"\n                    ]\n                }, area, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 822,\n                    columnNumber: 9\n                }, undefined));\n        const renderFiveOptionRadios = (areas)=>areas.map((area)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col mb-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            className: \"mb-2\",\n                            children: area\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 849,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center mb-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"multi-\".concat(area),\n                                    value: \"1\",\n                                    onChange: ()=>handleFiveOptionChange(area, \"1\"),\n                                    className: \"mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                                    lineNumber: 851,\n                                    columnNumber: 13\n                                }, undefined),\n                                \" Option 1\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 850,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center mb-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"multi-\".concat(area),\n                                    value: \"2\",\n                                    onChange: ()=>handleFiveOptionChange(area, \"2\"),\n                                    className: \"mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                                    lineNumber: 854,\n                                    columnNumber: 13\n                                }, undefined),\n                                \" Option 2\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 853,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center mb-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"multi-\".concat(area),\n                                    value: \"3\",\n                                    onChange: ()=>handleFiveOptionChange(area, \"3\"),\n                                    className: \"mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                                    lineNumber: 857,\n                                    columnNumber: 13\n                                }, undefined),\n                                \" Option 3\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 856,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center mb-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"multi-\".concat(area),\n                                    value: \"4\",\n                                    onChange: ()=>handleFiveOptionChange(area, \"4\"),\n                                    className: \"mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                                    lineNumber: 860,\n                                    columnNumber: 13\n                                }, undefined),\n                                \" Option 4\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 859,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center mb-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"multi-\".concat(area),\n                                    value: \"5\",\n                                    onChange: ()=>handleFiveOptionChange(area, \"5\"),\n                                    className: \"mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                                    lineNumber: 863,\n                                    columnNumber: 13\n                                }, undefined),\n                                \" Option 5\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 862,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, area, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 848,\n                    columnNumber: 9\n                }, undefined));\n        switch(currentQuestion.id){\n            case \"1\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 871,\n                            columnNumber: 59\n                        }, undefined),\n                        renderYesNoRadios(Object.keys(responses))\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 871,\n                    columnNumber: 16\n                }, undefined);\n            case \"1a\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 873,\n                            columnNumber: 59\n                        }, undefined),\n                        renderYesNoRadios(activeAreas)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 873,\n                    columnNumber: 16\n                }, undefined);\n            case \"1ai\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 875,\n                            columnNumber: 59\n                        }, undefined),\n                        renderYesNoRadios(activeAreas)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 875,\n                    columnNumber: 16\n                }, undefined);\n            case \"1aii\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 877,\n                            columnNumber: 59\n                        }, undefined),\n                        renderFiveOptionRadios(yesAreas1ai)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 877,\n                    columnNumber: 16\n                }, undefined);\n            case \"1aiii\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 879,\n                            columnNumber: 59\n                        }, undefined),\n                        renderFiveOptionRadios(finalAreas1aiii)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 879,\n                    columnNumber: 16\n                }, undefined);\n            case \"1aiv\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                            lineNumber: 881,\n                            columnNumber: 59\n                        }, undefined),\n                        renderFiveOptionRadios(noAreas1ai)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 881,\n                    columnNumber: 16\n                }, undefined);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"No more questions.\"\n                }, void 0, false, {\n                    fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                    lineNumber: 883,\n                    columnNumber: 16\n                }, undefined);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"max-w-md mx-auto mt-8 p-6 border rounded-lg shadow-lg bg-white\",\n        children: [\n            renderQuestion(),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-red-500\",\n                children: error\n            }, void 0, false, {\n                fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                lineNumber: 890,\n                columnNumber: 17\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 flex justify-between\",\n                children: [\n                    currentQuestionIndex > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleBack,\n                        className: \"bg-gray-300 hover:bg-gray-400 text-black py-2 px-4 rounded\",\n                        children: \"Back\"\n                    }, void 0, false, {\n                        fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                        lineNumber: 892,\n                        columnNumber: 38\n                    }, undefined),\n                    currentQuestionIndex < questions.length - 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleNext,\n                        className: \"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\",\n                        children: \"Next\"\n                    }, void 0, false, {\n                        fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                        lineNumber: 893,\n                        columnNumber: 57\n                    }, undefined),\n                    currentQuestionIndex === questions.length - 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\",\n                        children: \"Submit\"\n                    }, void 0, false, {\n                        fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                        lineNumber: 894,\n                        columnNumber: 59\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n                lineNumber: 891,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/alinafe/Documents/code/app/dataopenessandflow/page.tsx\",\n        lineNumber: 888,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SurveyPage, \"pgWLMcxDWPPh+Wkv/K7t0AUMLcY=\");\n_c = SurveyPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SurveyPage);\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/dataopenessandflow/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ZWMwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

});