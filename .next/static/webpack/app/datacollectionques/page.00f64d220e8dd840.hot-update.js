"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/datacollectionques/page",{

/***/ "(app-pages-browser)/./app/datacollectionques/page.tsx":
/*!*****************************************!*\
  !*** ./app/datacollectionques/page.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// 'use client';\n// import { useState } from 'react';\n// const SurveyPage = () => {\n//   const [isDarkMode, setIsDarkMode] = useState(false);\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const [error, setError] = useState<string | null>(null);\n//   const [responses, setResponses] = useState({\n//     UrbanWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   type AreaNames = 'UrbanWSS' | 'USSM' | 'RWSSM' | 'RSSM' | 'FM' | 'RF' | 'UOM';\n//   const areaFullNames: Record<AreaNames, string> = {\n//     UrbanWSS: \"Urban Water Supply Sector Monitoring\",\n//     USSM: \"Urban Sanitation Sector Monitoring\",\n//     RWSSM: \"Rural Water Supply Sector Monitoring\",\n//     RSSM: \"Rural Sanitation Sector Monitoring\",\n//     FM: \"Finance\",\n//     RF: \"Regulation\",\n//     UOM: \"Utility Operations\",\n//   };\n//   const areaFullName: { [key: string]: string } = {\n//     UrbanWSS: \"Urban Water Supply Sector Monitoring\",\n//     USSM: \"Urban Sanitation Sector Monitoring\",\n//     RWSSM: \"Rural Water Supply Sector Monitoring\",\n//     RSSM: \"Rural Sanitation Sector Monitoring\",\n//     FM: \"Finance\",\n//     RF: \"Regulation\",\n//     UOM: \"Utility Operations\",\n//   };\n// const optionsForQuestion1aii = [\n//   \"1. Poorly defined and inconsistently used, causing fragmented data practices.\", \n//   \"2. Some definition and use, but still uneven and not well-aligned with strategies.\", \n//   \"3. Growing alignment with national strategies, increasing use, with some inconsistencies remaining.\", \n//   \"4. Well-defined and widely used, aligned with national strategies, with minor discrepancies.\", \n//   \"5. Fully developed, universally used, enabling seamless and consistent data practices across all organisations.\"\n// ];\n// const optionsForQuestion1aiii = [\n//   \"Organisational Priorities: The standards aren't relevant to our organisation's goals\", \n//   \"Complexity of Standards: The standards are too complex or technical for us.\", \n//   \"Resource Constraints: We don't have enough money or staff to implement these standards.\", \n//   \"Resistance to Change: People in the organisation resist changing current practices.\", \n//   \"others please specify\"\n// ];\n// // Use these labels for each question\n//   const [yesAreas1ai, setYesAreas1ai] = useState<AreaNames[]>([]);\n//   const [noAreas1ai, setNoAreas1ai] = useState<AreaNames[]>([]);\n//   const [activeAreas, setActiveAreas] = useState<AreaNames[]>(Object.keys(responses) as AreaNames[]);\n//   const [finalAreas1aiii, setFinalAreas1aiii] = useState<AreaNames[]>([]);\n//   const questions = [\n//     { id: '1', text: '1.0: Does your organisation collect primary data?' },\n//     { id: '1a', text: '1.a: Is your organisation aware of national guidelines that specify how data should be collected?' },\n//     { id: '1ai', text: '1.a.(i): Does your organisation collect data in adherence to these national guidelines?' },\n//     { id: '1aii', text: '1.a.(ii): How effective are the guidelines in terms of their development, adoption, and suitability?' },\n//     { id: '1aiii', text: '1.a.(iii): Why are guidelines for data collection not fully effective in terms of their development, adoption, and suitability?' },\n//     { id: '1aiv', text: '1.a.(iv): Why does your organisation not collect data in adherence to these guidelines?' }\n//   ];\n//   const toggleDarkMode = () => {\n//   setIsDarkMode((prevMode) => !prevMode);\n// };\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const handleFiveOptionChange = (area: string, value: string) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const getYesAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === true);\n//   const getNoAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === false);\n//   const getOptions1to4 = () => yesAreas1ai.filter((area) => {\n//     const value = responses[area as keyof typeof responses];\n//     return value !== null && value !== '5';\n//   });\n//   const validateAllFieldsSelected = (areas: string[]) => {\n//     for (const area of areas) {\n//       if (responses[area as keyof typeof responses] === null) {\n//         return false;\n//       }\n//     }\n//     return true;\n//   };\n//   const handleNext = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     if (currentQuestion.id === '1a') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       const yesAreas = getYesAreas();\n//       setActiveAreas(yesAreas);\n//     } else if (currentQuestion.id === '1ai') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       setYesAreas1ai(getYesAreas());\n//       setNoAreas1ai(getNoAreas());\n//     } else if (currentQuestion.id === '1aii') {\n//       if (!validateAllFieldsSelected(yesAreas1ai)) {\n//         setError('Please select an option for all areas.');\n//         return;\n//       }\n//       const areasFor1aiii = getOptions1to4();\n//       setFinalAreas1aiii(areasFor1aiii);\n//     }\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n//     setError(null);\n//   };\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//     }\n//   };\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     const renderYesNoRadios = (areas: AreaNames[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex items-center mb-2\">\n//           <label className=\"text-gray-800 mr-2\">{areaFullNames[area]}</label> {/* No more error */}\n//           <div className=\"flex items-center\">\n//             <input\n//             type=\"radio\"\n//             name={`yesno-${area}`}\n//             value=\"yes\"\n//             checked={responses[area as keyof typeof responses] === true}\n//             onChange={() => handleYesNoChange(area, true)}\n//             className=\"mr-1 text-green-500 border-gray-300 focus:ring-green-500\" // Style for Yes option\n//           />\n//           <span className=\"text-green-600\">Yes</span>\n//           </div>\n//           <div>\n//             <input\n//             type=\"radio\"\n//             name={`yesno-${area}`}\n//             value=\"no\"\n//             checked={responses[area as keyof typeof responses] === false}\n//             onChange={() => handleYesNoChange(area, false)}\n//             className=\"mr-1 text-red-500 border-gray-300 focus:ring-red-500\" // Style for No option\n//           />\n//           <span className=\"text-red-600\">No</span>\n//           </div>\n//         </div>\n//       ))\n//     );\n//     const renderFiveOptionRadios = (areas: string[], options: string[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex flex-col mb-4\">\n//           {/* Use the full name from the mapping */}\n//           <label className=\"text-blue-800 mb-2\">{areaFullName[area] || area}</label>\n//           {options.map((option, index) => (\n//             <div key={`${area}-${index}`} className=\"text-red-500 flex items-center mb-1\">\n//               <input\n//                 type=\"radio\"\n//                 name={`multi-${area}`}\n//                 value={String(index + 1)}\n//                 onChange={() => handleFiveOptionChange(area, String(index + 1))}\n//                 className=\"mr-1\"\n//               />\n//               {option}\n//             </div>\n//           ))}\n//         </div>\n//       ))\n//     );\n//     switch (currentQuestion.id) {\n//       case '1':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(Object.keys(responses)as AreaNames[])}</div>;\n//       case '1a':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1ai':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1aii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(yesAreas1ai, optionsForQuestion1aii)}</div>;\n//       case '1aiii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(finalAreas1aiii, optionsForQuestion1aiii)}</div>;\n//       case '1aiv':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(noAreas1ai, optionsForQuestion1aiii)}</div>;\n//       default:\n//         return <p>No more questions.</p>;\n//     }\n//   };\n//   return (\n//     <div className=\"max-w-md mx-auto mt-8 p-6 border rounded-lg shadow-lg bg-white\">\n//       {renderQuestion()}\n//       {error && <p className=\"text-red-500\">{error}</p>}\n//       <div className=\"mt-4 flex justify-between\">\n//         {currentQuestionIndex > 0 && <button onClick={handleBack} className=\"bg-gray-300 hover:bg-gray-400 text-black py-2 px-4 rounded\">Back</button>}\n//         {currentQuestionIndex < questions.length - 1 && <button onClick={handleNext} className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">Next</button>}\n//         {currentQuestionIndex === questions.length - 1 && <button className=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\">Submit</button>}\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n//-----------------------\n//---------------------\n//--------------------------\n// 'use client';\n// import { useState } from 'react';\n// const SurveyPage = () => {\n//   const [isDarkMode, setIsDarkMode] = useState(false);\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const [error, setError] = useState<string | null>(null);\n//   const [responses, setResponses] = useState({\n//     UrbanWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   type AreaNames = 'UrbanWSS' | 'USSM' | 'RWSSM' | 'RSSM' | 'FM' | 'RF' | 'UOM';\n//   const areaFullNames: Record<AreaNames, string> = {\n//     UrbanWSS: \"Urban Water Supply Sector Monitoring\",\n//     USSM: \"Urban Sanitation Sector Monitoring\",\n//     RWSSM: \"Rural Water Supply Sector Monitoring\",\n//     RSSM: \"Rural Sanitation Sector Monitoring\",\n//     FM: \"Finance\",\n//     RF: \"Regulation\",\n//     UOM: \"Utility Operations\",\n//   };\n//   const optionsForQuestion1aii = [\n//     \"1. Poorly defined and inconsistently used, causing fragmented data practices.\", \n//     \"2. Some definition and use, but still uneven and not well-aligned with strategies.\", \n//     \"3. Growing alignment with national strategies, increasing use, with some inconsistencies remaining.\", \n//     \"4. Well-defined and widely used, aligned with national strategies, with minor discrepancies.\", \n//     \"5. Fully developed, universally used, enabling seamless and consistent data practices across all organisations.\"\n//   ];\n//   const optionsForQuestion1aiii = [\n//     \"Organisational Priorities: The standards aren't relevant to our organisation's goals\", \n//     \"Complexity of Standards: The standards are too complex or technical for us.\", \n//     \"Resource Constraints: We don't have enough money or staff to implement these standards.\", \n//     \"Resistance to Change: People in the organisation resist changing current practices.\", \n//     \"Others, please specify\"\n//   ];\n//   const [yesAreas1ai, setYesAreas1ai] = useState<AreaNames[]>([]);\n//   const [noAreas1ai, setNoAreas1ai] = useState<AreaNames[]>([]);\n//   const [activeAreas, setActiveAreas] = useState<AreaNames[]>(Object.keys(responses) as AreaNames[]);\n//   const [finalAreas1aiii, setFinalAreas1aiii] = useState<AreaNames[]>([]);\n//   const questions = [\n//     { id: '1', text: '1.0: Does your organisation collect primary data?' },\n//     { id: '1a', text: '1.a: Is your organisation aware of national guidelines that specify how data should be collected?' },\n//     { id: '1ai', text: '1.a.(i): Does your organisation collect data in adherence to these national guidelines?' },\n//     { id: '1aii', text: '1.a.(ii): How effective are the guidelines in terms of their development, adoption, and suitability?' },\n//     { id: '1aiii', text: '1.a.(iii): Why are guidelines for data collection not fully effective in terms of their development, adoption, and suitability?' },\n//     { id: '1aiv', text: '1.a.(iv): Why does your organisation not collect data in adherence to these guidelines?' }\n//   ];\n//   const toggleDarkMode = () => {\n//     setIsDarkMode((prevMode) => !prevMode);\n//   };\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const handleFiveOptionChange = (area: string, value: string) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const validateAllFieldsSelected = (areas: AreaNames[]) => {\n//     return areas.every((area) => responses[area] !== null);\n//   };\n//   const getYesAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === true);\n//   const getNoAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === false);\n//   const getOptions1to4 = () => yesAreas1ai.filter((area) => {\n//     const value = responses[area as keyof typeof responses];\n//     return value !== null && value !== '5';\n//   });\n//   const handleNext = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     if (currentQuestion.id === '1a') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       const yesAreas = getYesAreas();\n//       setActiveAreas(yesAreas);\n//     } else if (currentQuestion.id === '1ai') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       setYesAreas1ai(getYesAreas());\n//       setNoAreas1ai(getNoAreas());\n//     } else if (currentQuestion.id === '1aii') {\n//       if (!validateAllFieldsSelected(yesAreas1ai)) {\n//         setError('Please select an option for all areas.');\n//         return;\n//       }\n//       const areasFor1aiii = getOptions1to4();\n//       setFinalAreas1aiii(areasFor1aiii);\n//     } else if (currentQuestion.id === '1aiii' && !validateAllFieldsSelected(finalAreas1aiii)) {\n//       setError('Please select an option for all areas.');\n//       return;\n//     } else if (currentQuestion.id === '1aiv' && !validateAllFieldsSelected(noAreas1ai)) {\n//       setError('Please select an option for all areas.');\n//       return;\n//     }\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n//     setError(null);\n//   };\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//       setError(null);\n//     }\n//   };\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     const renderYesNoRadios = (areas: AreaNames[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex items-center mb-2\">\n//           <label className=\"text-blue-800 mr-2\">{areaFullNames[area]}</label>\n//           <div className=\"flex items-center\">\n//             <input\n//               type=\"radio\"\n//               name={`yesno-${area}`}\n//               value=\"yes\"\n//               checked={responses[area] === true}\n//               onChange={() => handleYesNoChange(area, true)}\n//               className=\"mr-1 text-green-500 border-gray-300 focus:ring-green-500\"\n//             />\n//             <span className=\"text-green-600\">Yes</span>\n//           </div>\n//           <div>\n//             <input\n//               type=\"radio\"\n//               name={`yesno-${area}`}\n//               value=\"no\"\n//               checked={responses[area] === false}\n//               onChange={() => handleYesNoChange(area, false)}\n//               className=\"mr-1 text-red-500 border-gray-300 focus:ring-red-500\"\n//             />\n//             <span className=\"text-red-600\">No</span>\n//           </div>\n//         </div>\n//       ))\n//     );\n//     const renderFiveOptionRadios = (areas: AreaNames[], options: string[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex flex-col mb-4\">\n//           <label className=\"text-blue-800 mb-2\">{areaFullNames[area]}</label>\n//           {options.map((option, index) => (\n//             <div key={`${area}-${index}`} className=\"text-red-500 flex items-center mb-1\">\n//               <input\n//                 type=\"radio\"\n//                 name={`multi-${area}`}\n//                 value={String(index + 1)}\n//                 onChange={() => handleFiveOptionChange(area, String(index + 1))}\n//                 className=\"mr-1\"\n//               />\n//               {option}\n//             </div>\n//           ))}\n//         </div>\n//       ))\n//     );\n//     switch (currentQuestion.id) {\n//       case '1':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(Object.keys(responses) as AreaNames[])}</div>;\n//       case '1a':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1ai':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1aii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(yesAreas1ai, optionsForQuestion1aii)}</div>;\n//       case '1aiii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(finalAreas1aiii, optionsForQuestion1aiii)}</div>;\n//       case '1aiv':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(noAreas1ai, optionsForQuestion1aiii)}</div>;\n//       default:\n//         return null;\n//     }\n//   };\n//   return (\n//     <div className={`${isDarkMode ? 'bg-gray-800 text-white' : 'bg-white text-black'} min-h-screen flex flex-col items-center justify-center`}>\n//       <div className=\"p-4\">\n//         <button onClick={toggleDarkMode} className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded\">{isDarkMode ? 'Light Mode' : 'Dark Mode'}</button>\n//         {renderQuestion()}\n//         <div className=\"mt-4 flex justify-between\">\n//         {currentQuestionIndex > 0 && <button onClick={handleBack} className=\"bg-gray-300 hover:bg-gray-400 text-black py-2 px-4 rounded\">Back</button>}\n//         {currentQuestionIndex < questions.length - 1 ? (\n//         <button onClick={handleNext} className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">Next</button>\n//   ) : (\n//     <button className=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\">Submit</button>\n//   )}\n// </div>\n//         {error && <p className=\"text-red-600 mt-2\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n//---------------------\n//--------------------\n//--------------------\n// 'use client';\n// import { useState } from 'react';\n// const SurveyPage = () => {\n//   const [isDarkMode, setIsDarkMode] = useState(false);\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const [error, setError] = useState<string | null>(null);\n//   const [responses, setResponses] = useState({\n//     UrbanWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   type AreaNames = 'UrbanWSS' | 'USSM' | 'RWSSM' | 'RSSM' | 'FM' | 'RF' | 'UOM';\n//   const areaFullNames: Record<AreaNames, string> = {\n//     UrbanWSS: \"Urban Water Supply Sector Monitoring\",\n//     USSM: \"Urban Sanitation Sector Monitoring\",\n//     RWSSM: \"Rural Water Supply Sector Monitoring\",\n//     RSSM: \"Rural Sanitation Sector Monitoring\",\n//     FM: \"Finance\",\n//     RF: \"Regulation\",\n//     UOM: \"Utility Operations\",\n//   };\n//   const optionsForQuestion1aii = [\n//     \"1. Poorly defined and inconsistently used, causing fragmented data practices.\", \n//     \"2. Some definition and use, but still uneven and not well-aligned with strategies.\", \n//     \"3. Growing alignment with national strategies, increasing use, with some inconsistencies remaining.\", \n//     \"4. Well-defined and widely used, aligned with national strategies, with minor discrepancies.\", \n//     \"5. Fully developed, universally used, enabling seamless and consistent data practices across all organisations.\"\n//   ];\n//   const optionsForQuestion1aiii = [\n//     \"Organisational Priorities: The standards aren't relevant to our organisation's goals\", \n//     \"Complexity of Standards: The standards are too complex or technical for us.\", \n//     \"Resource Constraints: We don't have enough money or staff to implement these standards.\", \n//     \"Resistance to Change: People in the organisation resist changing current practices.\", \n//     \"Others, please specify\"\n//   ];\n//   const [yesAreas1ai, setYesAreas1ai] = useState<AreaNames[]>([]);\n//   const [noAreas1ai, setNoAreas1ai] = useState<AreaNames[]>([]);\n//   const [activeAreas, setActiveAreas] = useState<AreaNames[]>(Object.keys(responses) as AreaNames[]);\n//   const [finalAreas1aiii, setFinalAreas1aiii] = useState<AreaNames[]>([]);\n//   const questions = [\n//     { id: '1', text: '1.0: Does your organisation collect primary data?' },\n//     { id: '1a', text: '1.a: Is your organisation aware of national guidelines that specify how data should be collected?' },\n//     { id: '1ai', text: '1.a.(i): Does your organisation collect data in adherence to these national guidelines?' },\n//     { id: '1aii', text: '1.a.(ii): How effective are the guidelines in terms of their development, adoption, and suitability?' },\n//     { id: '1aiii', text: '1.a.(iii): Why are guidelines for data collection not fully effective in terms of their development, adoption, and suitability?' },\n//     { id: '1aiv', text: '1.a.(iv): Why does your organisation not collect data in adherence to these guidelines?' }\n//   ];\n//   const toggleDarkMode = () => {\n//     setIsDarkMode((prevMode) => !prevMode);\n//   };\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const handleFiveOptionChange = (area: string, value: string) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const validateAllFieldsSelected = (areas: AreaNames[]) => {\n//     return areas.every((area) => responses[area] !== null);\n//   };\n//   const getYesAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === true);\n//   const getNoAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === false);\n//   const getOptions1to4 = () => yesAreas1ai.filter((area) => {\n//     const value = responses[area as keyof typeof responses];\n//     return value !== null && value !== '5';\n//   });\n//   const saveResponsesToJSON = () => {\n//     const json = JSON.stringify(responses, null, 2);\n//     console.log(json); // Replace with save logic or API call as needed\n//   };\n//   const handleNext = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     if (currentQuestion.id === '1a') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       const yesAreas = getYesAreas();\n//       setActiveAreas(yesAreas);\n//     } else if (currentQuestion.id === '1ai') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       setYesAreas1ai(getYesAreas());\n//       setNoAreas1ai(getNoAreas());\n//     } else if (currentQuestion.id === '1aii') {\n//       if (!validateAllFieldsSelected(yesAreas1ai)) {\n//         setError('Please select an option for all areas.');\n//         return;\n//       }\n//       const areasFor1aiii = getOptions1to4();\n//       setFinalAreas1aiii(areasFor1aiii);\n//     } else if (currentQuestion.id === '1aiii' && !validateAllFieldsSelected(finalAreas1aiii)) {\n//       setError('Please select an option for all areas.');\n//       return;\n//     } else if (currentQuestion.id === '1aiv' && !validateAllFieldsSelected(noAreas1ai)) {\n//       setError('Please select an option for all areas.');\n//       return;\n//     }\n//     saveResponsesToJSON();\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n//     setError(null);\n//   };\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//       setError(null);\n//     }\n//   };\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     const renderYesNoRadios = (areas: AreaNames[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex items-center mb-2\">\n//           <label className=\"text-blue-800 mr-2\">{areaFullNames[area]}</label>\n//           <div className=\"flex items-center\">\n//             <input\n//               type=\"radio\"\n//               name={`yesno-${area}`}\n//               value=\"yes\"\n//               checked={responses[area] === true}\n//               onChange={() => handleYesNoChange(area, true)}\n//               className=\"mr-1 text-green-500 border-gray-300 focus:ring-green-500\"\n//             />\n//             <span className=\"text-green-600\">Yes</span>\n//           </div>\n//           <div>\n//             <input\n//               type=\"radio\"\n//               name={`yesno-${area}`}\n//               value=\"no\"\n//               checked={responses[area] === false}\n//               onChange={() => handleYesNoChange(area, false)}\n//               className=\"mr-1 text-red-500 border-gray-300 focus:ring-red-500\"\n//             />\n//             <span className=\"text-red-600\">No</span>\n//           </div>\n//         </div>\n//       ))\n//     );\n//     const renderFiveOptionRadios = (areas: AreaNames[], options: string[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex flex-col mb-4\">\n//           <label className=\"text-blue-800 mb-2\">{areaFullNames[area]}</label>\n//           {options.map((option, index) => (\n//             <div key={`${area}-${index}`} className=\"text-red-500 flex items-center mb-1\">\n//               <input\n//                 type=\"radio\"\n//                 name={`multi-${area}`}\n//                 value={String(index + 1)}\n//                 onChange={() => handleFiveOptionChange(area, String(index + 1))}\n//                 className=\"mr-1\"\n//               />\n//               {option}\n//             </div>\n//           ))}\n//         </div>\n//       ))\n//     );\n//     switch (currentQuestion.id) {\n//       case '1':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(Object.keys(responses) as AreaNames[])}</div>;\n//       case '1a':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1ai':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1aii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(yesAreas1ai, optionsForQuestion1aii)}</div>;\n//       case '1aiii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(finalAreas1aiii, optionsForQuestion1aiii)}</div>;\n//       case '1aiv':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(noAreas1ai, optionsForQuestion1aiii)}</div>;\n//       default:\n//         return null;\n//     }\n//   };\n//   return (\n//     <div className={`min-h-screen flex flex-col items-center justify-center ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-100 text-black'}`}>\n//       <div className=\"max-w-lg w-full p-4\">\n//         <button onClick={toggleDarkMode} className=\"p-2 rounded bg-blue-500 text-white mb-4\">Toggle Dark Mode</button>\n//         {renderQuestion()}\n//         {error && <div className=\"text-red-500 mt-4\">{error}</div>}\n//         <div className=\"flex justify-between mt-6\">\n//           {currentQuestionIndex > 0 && <button onClick={handleBack} className=\"p-2 rounded bg-blue-500 text-white\">Back</button>}\n//           {currentQuestionIndex < questions.length - 1 ? (\n//             <button onClick={handleNext} className=\"p-2 rounded bg-blue-500 text-white\">Next</button>\n//           ) : (\n//             <button onClick={saveResponsesToJSON} className=\"p-2 rounded bg-green-500 text-white\">Submit</button>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n//--------------------------------------------\n//--------------------------------------------\n//--------------------------------------------\n// 'use client';\n// import { useState } from 'react';\n// const SurveyPage = () => {\n//   const [isDarkMode, setIsDarkMode] = useState(false);\n//   const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//   const [error, setError] = useState<string | null>(null);\n//   const [responses, setResponses] = useState({\n//     UrbanWSS: null,\n//     USSM: null,\n//     RWSSM: null,\n//     RSSM: null,\n//     FM: null,\n//     RF: null,\n//     UOM: null,\n//   });\n//   type AreaNames = 'UrbanWSS' | 'USSM' | 'RWSSM' | 'RSSM' | 'FM' | 'RF' | 'UOM';\n//   const areaFullNames: Record<AreaNames, string> = {\n//     UrbanWSS: \"Urban Water Supply Sector Monitoring\",\n//     USSM: \"Urban Sanitation Sector Monitoring\",\n//     RWSSM: \"Rural Water Supply Sector Monitoring\",\n//     RSSM: \"Rural Sanitation Sector Monitoring\",\n//     FM: \"Finance\",\n//     RF: \"Regulation\",\n//     UOM: \"Utility Operations\",\n//   };\n//   const optionsForQuestion1aii = [\n//     \"1. Poorly defined and inconsistently used, causing fragmented data practices.\", \n//     \"2. Some definition and use, but still uneven and not well-aligned with strategies.\", \n//     \"3. Growing alignment with national strategies, increasing use, with some inconsistencies remaining.\", \n//     \"4. Well-defined and widely used, aligned with national strategies, with minor discrepancies.\", \n//     \"5. Fully developed, universally used, enabling seamless and consistent data practices across all organisations.\"\n//   ];\n//   const optionsForQuestion1aiii = [\n//     \"Organisational Priorities: The standards aren't relevant to our organisation's goals\", \n//     \"Complexity of Standards: The standards are too complex or technical for us.\", \n//     \"Resource Constraints: We don't have enough money or staff to implement these standards.\", \n//     \"Resistance to Change: People in the organisation resist changing current practices.\", \n//     \"Others, please specify\"\n//   ];\n//   const [yesAreas1ai, setYesAreas1ai] = useState<AreaNames[]>([]);\n//   const [noAreas1ai, setNoAreas1ai] = useState<AreaNames[]>([]);\n//   const [activeAreas, setActiveAreas] = useState<AreaNames[]>(Object.keys(responses) as AreaNames[]);\n//   const [finalAreas1aiii, setFinalAreas1aiii] = useState<AreaNames[]>([]);\n//   const questions = [\n//     { id: '1', text: '1.0: Does your organisation collect primary data?' },\n//     { id: '1a', text: '1.a: Is your organisation aware of national guidelines that specify how data should be collected?' },\n//     { id: '1ai', text: '1.a.(i): Does your organisation collect data in adherence to these national guidelines?' },\n//     { id: '1aii', text: '1.a.(ii): How effective are the guidelines in terms of their development, adoption, and suitability?' },\n//     { id: '1aiii', text: '1.a.(iii): Why are guidelines for data collection not fully effective in terms of their development, adoption, and suitability?' },\n//     { id: '1aiv', text: '1.a.(iv): Why does your organisation not collect data in adherence to these guidelines?' }\n//   ];\n//   const toggleDarkMode = () => {\n//     setIsDarkMode((prevMode) => !prevMode);\n//   };\n//   const handleYesNoChange = (area: string, value: boolean) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const handleFiveOptionChange = (area: string, value: string) => {\n//     setResponses((prevResponses) => ({\n//       ...prevResponses,\n//       [area]: value,\n//     }));\n//     setError(null);\n//   };\n//   const validateAllFieldsSelected = (areas: AreaNames[]) => {\n//     return areas.every((area) => responses[area] !== null);\n//   };\n//   const getYesAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === true);\n//   const getNoAreas = () => activeAreas.filter((area) => responses[area as keyof typeof responses] === false);\n//   const getOptions1to4 = () => yesAreas1ai.filter((area) => {\n//     const value = responses[area as keyof typeof responses];\n//     return value !== null && value !== '5';\n//   });\n//   const saveResponsesToJSON = () => {\n//     const json = JSON.stringify(responses, null, 2);\n//     console.log(json); // Replace with save logic or API call as needed\n//   };\n//   const handleNext = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     if (currentQuestion.id === '1') {\n//       if (!validateAllFieldsSelected(Object.keys(responses) as AreaNames[])) {\n//         setError('Please answer for all areas.');\n//         return;\n//       }\n//     } else if (currentQuestion.id === '1a') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       const yesAreas = getYesAreas();\n//       setActiveAreas(yesAreas);\n//     } else if (currentQuestion.id === '1ai') {\n//       if (!validateAllFieldsSelected(activeAreas)) {\n//         setError('Please select Yes or No for all areas.');\n//         return;\n//       }\n//       setYesAreas1ai(getYesAreas());\n//       setNoAreas1ai(getNoAreas());\n//     } else if (currentQuestion.id === '1aii') {\n//       if (!validateAllFieldsSelected(yesAreas1ai)) {\n//         setError('Please select an option for all areas.');\n//         return;\n//       }\n//       const areasFor1aiii = getOptions1to4();\n//       setFinalAreas1aiii(areasFor1aiii);\n//     } else if (currentQuestion.id === '1aiii' && !validateAllFieldsSelected(finalAreas1aiii)) {\n//       setError('Please select an option for all areas.');\n//       return;\n//     } else if (currentQuestion.id === '1aiv' && !validateAllFieldsSelected(noAreas1ai)) {\n//       setError('Please select an option for all areas.');\n//       return;\n//     }\n//     saveResponsesToJSON();\n//     setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n//     setError(null);\n//   };\n//   const handleBack = () => {\n//     if (currentQuestionIndex > 0) {\n//       setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\n//       setError(null);\n//     }\n//   };\n//   const renderQuestion = () => {\n//     const currentQuestion = questions[currentQuestionIndex];\n//     const renderYesNoRadios = (areas: AreaNames[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex items-center mb-2\">\n//           <label className=\"text-blue-800 mr-2\">{areaFullNames[area]}</label>\n//           <div className=\"flex items-center\">\n//             <input\n//               type=\"radio\"\n//               name={`yesno-${area}`}\n//               value=\"yes\"\n//               checked={responses[area] === true}\n//               onChange={() => handleYesNoChange(area, true)}\n//               className=\"mr-1 text-green-500 border-gray-300 focus:ring-green-500\"\n//             />\n//             <span className=\"text-green-600\">Yes</span>\n//           </div>\n//           <div>\n//             <input\n//               type=\"radio\"\n//               name={`yesno-${area}`}\n//               value=\"no\"\n//               checked={responses[area] === false}\n//               onChange={() => handleYesNoChange(area, false)}\n//               className=\"mr-1 text-red-500 border-gray-300 focus:ring-red-500\"\n//             />\n//             <span className=\"text-red-600\">No</span>\n//           </div>\n//         </div>\n//       ))\n//     );\n//     const renderFiveOptionRadios = (areas: AreaNames[], options: string[]) => (\n//       areas.map((area) => (\n//         <div key={area} className=\"flex flex-col mb-4\">\n//           <label className=\"text-blue-800 mb-2\">{areaFullNames[area]}</label>\n//           {options.map((option, index) => (\n//             <div key={`${area}-${index}`} className=\"text-red-500 flex items-center mb-1\">\n//               <input\n//                 type=\"radio\"\n//                 name={`multi-${area}`}\n//                 value={String(index + 1)}\n//                 onChange={() => handleFiveOptionChange(area, String(index + 1))}\n//                 className=\"mr-1\"\n//               />\n//               {option}\n//             </div>\n//           ))}\n//         </div>\n//       ))\n//     );\n//     switch (currentQuestion.id) {\n//       case '1':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(Object.keys(responses) as AreaNames[])}</div>;\n//       case '1a':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1ai':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderYesNoRadios(activeAreas)}</div>;\n//       case '1aii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(yesAreas1ai, optionsForQuestion1aii)}</div>;\n//       case '1aiii':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(finalAreas1aiii, optionsForQuestion1aiii)}</div>;\n//       case '1aiv':\n//         return <div className=\"p-4 border rounded shadow\"><h3 className=\"text-blue-500 font-bold mb-4\">{currentQuestion.text}</h3>{renderFiveOptionRadios(noAreas1ai, optionsForQuestion1aiii)}</div>;\n//       default:\n//         return <div>Unknown question</div>;\n//     }\n//   };\n//   return (\n//     <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-white text-black'}`}>\n//       <button className=\"p-2 bg-indigo-500 text-white rounded mb-4\" onClick={toggleDarkMode}>\n//         Toggle Dark Mode\n//       </button>\n//       {renderQuestion()}\n//       {error && <div className=\"text-red-500 font-bold mt-4\">{error}</div>}\n//       <div className=\"mt-6 flex\">\n//         <button onClick={handleBack} className=\"p-2 mr-4 bg-gray-400 text-white rounded\">Back</button>\n//         <button onClick={handleNext} className=\"p-2 bg-blue-500 text-white rounded\">Next</button>\n//       </div>\n//     </div>\n//   );\n// };\n// export default SurveyPage;\n//--------------------------------------------\n//--------------------------------------------\n//--------------------------------------------\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst SurveyPage = ()=>{\n    _s();\n    const [isDarkMode, setIsDarkMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [responses, setResponses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        UrbanWSS: null,\n        USSM: null,\n        RWSSM: null,\n        RSSM: null,\n        FM: null,\n        RF: null,\n        UOM: null\n    });\n    const areaFullNames = {\n        UrbanWSS: \"Urban Water Supply Sector Monitoring\",\n        USSM: \"Urban Sanitation Sector Monitoring\",\n        RWSSM: \"Rural Water Supply Sector Monitoring\",\n        RSSM: \"Rural Sanitation Sector Monitoring\",\n        FM: \"Finance\",\n        RF: \"Regulation\",\n        UOM: \"Utility Operations\"\n    };\n    const optionsForQuestion1aii = [\n        \"1. Poorly defined and inconsistently used, causing fragmented data practices.\",\n        \"2. Some definition and use, but still uneven and not well-aligned with strategies.\",\n        \"3. Growing alignment with national strategies, increasing use, with some inconsistencies remaining.\",\n        \"4. Well-defined and widely used, aligned with national strategies, with minor discrepancies.\",\n        \"5. Fully developed, universally used, enabling seamless and consistent data practices across all organisations.\"\n    ];\n    const optionsForQuestion1aiii = [\n        \"Organisational Priorities: The standards aren't relevant to our organisation's goals\",\n        \"Complexity of Standards: The standards are too complex or technical for us.\",\n        \"Resource Constraints: We don't have enough money or staff to implement these standards.\",\n        \"Resistance to Change: People in the organisation resist changing current practices.\",\n        \"Others, please specify\"\n    ];\n    const [yesAreas1ai, setYesAreas1ai] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [noAreas1ai, setNoAreas1ai] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeAreas, setActiveAreas] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Object.keys(responses));\n    const [finalAreas1aiii, setFinalAreas1aiii] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const questions = [\n        {\n            id: \"1\",\n            text: \"1.0: Does your organisation collect primary data?\"\n        },\n        {\n            id: \"1a\",\n            text: \"1.a: Is your organisation aware of national guidelines that specify how data should be collected?\"\n        },\n        {\n            id: \"1ai\",\n            text: \"1.a.(i): Does your organisation collect data in adherence to these national guidelines?\"\n        },\n        {\n            id: \"1aii\",\n            text: \"1.a.(ii): How effective are the guidelines in terms of their development, adoption, and suitability?\"\n        },\n        {\n            id: \"1aiii\",\n            text: \"1.a.(iii): Why are guidelines for data collection not fully effective in terms of their development, adoption, and suitability?\"\n        },\n        {\n            id: \"1aiv\",\n            text: \"1.a.(iv): Why does your organisation not collect data in adherence to these guidelines?\"\n        }\n    ];\n    const toggleDarkMode = ()=>{\n        setIsDarkMode((prevMode)=>!prevMode);\n    };\n    const handleYesNoChange = (area, value)=>{\n        setResponses((prevResponses)=>({\n                ...prevResponses,\n                [area]: value\n            }));\n        setError(null);\n    };\n    const handleFiveOptionChange = (area, value)=>{\n        setResponses((prevResponses)=>({\n                ...prevResponses,\n                [area]: value\n            }));\n        setError(null);\n    };\n    // Separate validation function for Yes/No responses\n    const validateYesNoResponses = (areas)=>{\n        return areas.every((area)=>responses[area] !== null);\n    };\n    // Separate validation function for five-option responses\n    const validateFiveOptionResponses = (areas)=>{\n        return areas.every((area)=>responses[area] !== null);\n    };\n    const getYesAreas = ()=>activeAreas.filter((area)=>responses[area] === true);\n    const getNoAreas = ()=>activeAreas.filter((area)=>responses[area] === false);\n    const getOptions1to4 = ()=>yesAreas1ai.filter((area)=>{\n            const value = responses[area];\n            return value !== null && value !== \"5\";\n        });\n    const saveResponsesToJSON = ()=>{\n        const json = JSON.stringify(responses, null, 2);\n        console.log(json); // Replace with save logic or API call as needed\n    };\n    const handleNext = ()=>{\n        const currentQuestion = questions[currentQuestionIndex];\n        if (currentQuestion.id === \"1\") {\n            if (!validateYesNoResponses(Object.keys(responses))) {\n                setError(\"Please answer for all areas.\");\n                return;\n            }\n        } else if (currentQuestion.id === \"1a\") {\n            if (!validateYesNoResponses(activeAreas)) {\n                setError(\"Please select Yes or No for all areas.\");\n                return;\n            }\n            const yesAreas = getYesAreas();\n            setActiveAreas(yesAreas);\n        } else if (currentQuestion.id === \"1ai\") {\n            if (!validateYesNoResponses(activeAreas)) {\n                setError(\"Please select Yes or No for all areas.\");\n                return;\n            }\n            setYesAreas1ai(getYesAreas());\n            setNoAreas1ai(getNoAreas());\n        } else if (currentQuestion.id === \"1aii\") {\n            if (!validateFiveOptionResponses(yesAreas1ai)) {\n                setError(\"Please select an option for all areas.\");\n                return;\n            }\n            const areasFor1aiii = getOptions1to4();\n            setFinalAreas1aiii(areasFor1aiii);\n        } else if (currentQuestion.id === \"1aiii\" && !validateFiveOptionResponses(finalAreas1aiii)) {\n            setError(\"Please select an option for all areas.\");\n            return;\n        } else if (currentQuestion.id === \"1aiv\" && !validateFiveOptionResponses(noAreas1ai)) {\n            setError(\"Please select an option for all areas.\");\n            return;\n        }\n        saveResponsesToJSON();\n        setCurrentQuestionIndex((prevIndex)=>prevIndex + 1);\n        setError(null);\n    };\n    const handleBack = ()=>{\n        if (currentQuestionIndex > 0) {\n            setCurrentQuestionIndex((prevIndex)=>prevIndex - 1);\n            setError(null);\n        }\n    };\n    const renderQuestion = ()=>{\n        const currentQuestion = questions[currentQuestionIndex];\n        const renderYesNoRadios = (areas)=>areas.map((area)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center mb-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            className: \"text-blue-800 mr-2\",\n                            children: areaFullNames[area]\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1106,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"yesno-\".concat(area),\n                                    value: \"yes\",\n                                    checked: responses[area] === true,\n                                    onChange: ()=>handleYesNoChange(area, true),\n                                    className: \"mr-1 text-green-500 border-gray-300 focus:ring-green-500\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                                    lineNumber: 1108,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-green-600\",\n                                    children: \"Yes\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                                    lineNumber: 1116,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1107,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"radio\",\n                                    name: \"yesno-\".concat(area),\n                                    value: \"no\",\n                                    checked: responses[area] === false,\n                                    onChange: ()=>handleYesNoChange(area, false),\n                                    className: \"mr-1 text-red-500 border-gray-300 focus:ring-red-500\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                                    lineNumber: 1119,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-red-600\",\n                                    children: \"No\"\n                                }, void 0, false, {\n                                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                                    lineNumber: 1127,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1118,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, area, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1105,\n                    columnNumber: 9\n                }, undefined));\n        const renderFiveOptionRadios = (areas, options)=>areas.map((area)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col mb-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            className: \"text-blue-800 mb-2\",\n                            children: areaFullNames[area]\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1136,\n                            columnNumber: 11\n                        }, undefined),\n                        options.map((option, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-red-500 flex items-center mb-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"radio\",\n                                        name: \"multi-\".concat(area),\n                                        value: String(index + 1),\n                                        onChange: ()=>handleFiveOptionChange(area, String(index + 1)),\n                                        className: \"mr-1\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                                        lineNumber: 1139,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    option\n                                ]\n                            }, \"\".concat(area, \"-\").concat(index), true, {\n                                fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                                lineNumber: 1138,\n                                columnNumber: 13\n                            }, undefined))\n                    ]\n                }, area, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1135,\n                    columnNumber: 9\n                }, undefined));\n        switch(currentQuestion.id){\n            case \"1\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-blue-500 font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1155,\n                            columnNumber: 59\n                        }, undefined),\n                        renderYesNoRadios(Object.keys(responses))\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1155,\n                    columnNumber: 16\n                }, undefined);\n            case \"1a\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-blue-500 font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1157,\n                            columnNumber: 59\n                        }, undefined),\n                        renderYesNoRadios(activeAreas)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1157,\n                    columnNumber: 16\n                }, undefined);\n            case \"1ai\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-blue-500 font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1159,\n                            columnNumber: 59\n                        }, undefined),\n                        renderYesNoRadios(activeAreas)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1159,\n                    columnNumber: 16\n                }, undefined);\n            case \"1aii\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-blue-500 font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1161,\n                            columnNumber: 59\n                        }, undefined),\n                        renderFiveOptionRadios(yesAreas1ai, optionsForQuestion1aii)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1161,\n                    columnNumber: 16\n                }, undefined);\n            case \"1aiii\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-blue-500 font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1163,\n                            columnNumber: 59\n                        }, undefined),\n                        renderFiveOptionRadios(finalAreas1aiii, optionsForQuestion1aiii)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1163,\n                    columnNumber: 16\n                }, undefined);\n            case \"1aiv\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 border rounded shadow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-blue-500 font-bold mb-4\",\n                            children: currentQuestion.text\n                        }, void 0, false, {\n                            fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                            lineNumber: 1165,\n                            columnNumber: 59\n                        }, undefined),\n                        renderFiveOptionRadios(noAreas1ai, optionsForQuestion1aiii)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1165,\n                    columnNumber: 16\n                }, undefined);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Thank you for completing the survey.\"\n                }, void 0, false, {\n                    fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                    lineNumber: 1167,\n                    columnNumber: 16\n                }, undefined);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-4 rounded-lg shadow-md \".concat(isDarkMode ? \"bg-gray-800 text-white\" : \"bg-white text-gray-800\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: toggleDarkMode,\n                className: \"mb-4 text-blue-500\",\n                children: \"Toggle Dark Mode\"\n            }, void 0, false, {\n                fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                lineNumber: 1173,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: renderQuestion()\n            }, void 0, false, {\n                fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                lineNumber: 1174,\n                columnNumber: 7\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-red-500 mt-2\",\n                children: error\n            }, void 0, false, {\n                fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                lineNumber: 1175,\n                columnNumber: 17\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4\",\n                children: [\n                    currentQuestionIndex > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleBack,\n                        className: \"mr-2 text-blue-500\",\n                        children: \"Back\"\n                    }, void 0, false, {\n                        fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                        lineNumber: 1177,\n                        columnNumber: 38\n                    }, undefined),\n                    currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleNext,\n                        className: \"text-blue-500\",\n                        children: \"Next\"\n                    }, void 0, false, {\n                        fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                        lineNumber: 1179,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleNext,\n                        className: \"text-green-500\",\n                        children: \"Submit\"\n                    }, void 0, false, {\n                        fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                        lineNumber: 1181,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n                lineNumber: 1176,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/alinafe/Documents/code/app/datacollectionques/page.tsx\",\n        lineNumber: 1172,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SurveyPage, \"fdr86LemID7vMXU/u8DNs7HrXXA=\");\n_c = SurveyPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SurveyPage);\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/datacollectionques/page.tsx\n"));

/***/ })

});